name: Deploy Dev

on:      
  workflow_dispatch: {}
  schedule:
    - cron: "0 * * * *"

concurrency:
  group: cdk-dev
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'eu-west-1' }}

jobs:
  lint-frontend:
    name: Lint frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: src/frontend/package-lock.json
      - name: Install deps (frontend)
        working-directory: src/frontend
        run: npm ci
      - name: Run lint
        working-directory: src/frontend
        run: npm run lint

  test-backend:
    name: Unit tests (backend)
    runs-on: ubuntu-latest
    needs: lint-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: src/backend/package-lock.json
      - name: Install deps (backend)
        working-directory: src/backend
        run: npm ci
      - name: Run unit tests (backend)
        working-directory: src/backend
        run: npm run test:unit

  test-infra:
    name: Unit tests (infrastructure)
    runs-on: ubuntu-latest
    needs: lint-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: infrastructure/package-lock.json
      - name: Install deps (backend)
        working-directory: src/backend
        run: npm ci
      - name: Install deps (infra)
        working-directory: infrastructure
        run: npm ci
      - name: Run unit tests (infra)
        working-directory: infrastructure
        run: npm run test:unit

  deploy:
    name: Deploy to dev
    environment: dev
    runs-on: ubuntu-latest
    needs: [test-backend, test-infra, lint-frontend]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            src/backend/package-lock.json
            infrastructure/package-lock.json
      - name: Install deps (backend)
        working-directory: src/backend
        run: npm ci

      - name: Install deps (infra)
        working-directory: infrastructure
        run: npm ci

      - name: Connect to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: CDK synth (dev)
        working-directory: infrastructure
        run: npx cdk synth -c env=dev

      - name: CDK deploy (dev)
        working-directory: infrastructure
        run: npx cdk deploy --all -c env=dev --require-approval=never
